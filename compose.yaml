version: '3.8'

services:
  server:
    build:
      context: .
      target: dev
    env_file:
      - .env
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - db-password
    volumes:
      - .:/usr/src/app
      - /app/node_modules
  db:
    image: postgres:14.11
    restart: always
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: worknify
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.

